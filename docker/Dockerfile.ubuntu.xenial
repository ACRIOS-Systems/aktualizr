FROM ubuntu:xenial
LABEL Description="Aktualizr testing dockerfile for Ubuntu Xenial with p11"

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get -y install --no-install-suggests --no-install-recommends debian-archive-keyring
RUN echo "deb http://deb.debian.org/debian  stretch-backports main" > /etc/apt/sources.list.d/stretch-backports.list

# It is important to run these in the same RUN command, because otherwise
# Docker layer caching breaks us
RUN apt-get update && apt-get -y install --no-install-suggests --no-install-recommends \
  apt-transport-https \
  autoconf \
  asn1c \
  automake \
  awscli \
  bison \
  ccache \
  clang-format-6.0 \
  curl \
  e2fslibs-dev \
  fiu-utils \
  g++ \
  gcc \
  git \
  lcov \
  libarchive-dev \
  libcurl4-openssl-dev \
  libengine-pkcs11-openssl \
  libexpat1-dev \
  libffi-dev \
  libfiu-dev \
  libfuse-dev \
  libglib2.0-dev \
  libgpgme11-dev \
  libgtest-dev \
  liblzma-dev \
  libsodium-dev \
  libsqlite3-dev \
  libssl-dev \
  libsystemd-dev \
  libtool \
  lshw \
  make \
  net-tools \
  opensc \
  pkg-config \
  psmisc \
  python-dev \
  python3-dev \
  python3-gi \
  python3-openssl \
  python3-pip \
  python3-venv \
  sqlite3 \
  wget \
  zip

# Includes workaround for this bug:
# https://bugs.launchpad.net/ubuntu/+source/valgrind/+bug/1501545
# https://stackoverflow.com/questions/37032339/valgrind-unrecognised-instruction
RUN echo "deb http://archive.ubuntu.com/ubuntu/ bionic main multiverse restricted universe" > /etc/apt/sources.list.d/bionic.list
RUN apt-get update && apt-get -y install \
  libp11-3 \
  libp11-dev \
  softhsm2 \
  valgrind


WORKDIR /cmake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4.tar.gz -nv
RUN tar -xzf cmake-3.14.4.tar.gz
WORKDIR /cmake/cmake-3.14.4
RUN ./configure
RUN make -j4
RUN make install

WORKDIR /boost
RUN wget https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.gz -nv
RUN tar -xzf boost_1_64_0.tar.gz
WORKDIR /boost/boost_1_64_0
RUN ./bootstrap.sh --prefix=/usr/
RUN ./b2
RUN ./b2 install

WORKDIR /ostree
RUN git init && git remote add origin https://github.com/ostreedev/ostree
RUN git fetch origin v2018.9 && git checkout FETCH_HEAD
RUN NOCONFIGURE=1 ./autogen.sh
RUN ./configure CFLAGS='-Wno-error=missing-prototypes' --with-libarchive --disable-gtk-doc --disable-gtk-doc-html --disable-gtk-doc-pdf --disable-man --with-builtin-grub2-mkconfig --with-curl --without-soup --prefix=/usr
RUN make VERBOSE=1 -j4
RUN make install

RUN ldconfig /usr/lib

RUN useradd testuser

WORKDIR /
