#ifndef GENERATED_ASN1SCC_common_H
#define GENERATED_ASN1SCC_common_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef char Identifier[33];

#define Identifier_REQUIRED_BYTES_FOR_ENCODING       29 
#define Identifier_REQUIRED_BITS_FOR_ENCODING        229
#define Identifier_REQUIRED_BYTES_FOR_ACN_ENCODING   29 
#define Identifier_REQUIRED_BITS_FOR_ACN_ENCODING    229
#define Identifier_REQUIRED_BYTES_FOR_XER_ENCODING   57

void Identifier_Initialize(Identifier pVal);
flag Identifier_IsConstraintValid(const Identifier val, int* pErrCode);
#ifndef ERR_Identifier 
#define ERR_Identifier		1001  /*(SIZE(1 .. 32))*/
#endif

typedef char FilePath[257];

#define FilePath_REQUIRED_BYTES_FOR_ENCODING       225 
#define FilePath_REQUIRED_BITS_FOR_ENCODING        1800
#define FilePath_REQUIRED_BYTES_FOR_ACN_ENCODING   225 
#define FilePath_REQUIRED_BITS_FOR_ACN_ENCODING    1800
#define FilePath_REQUIRED_BYTES_FOR_XER_ENCODING   277

void FilePath_Initialize(FilePath pVal);
flag FilePath_IsConstraintValid(const FilePath val, int* pErrCode);
#ifndef ERR_FilePath 
#define ERR_FilePath		1002  /*(SIZE(1 .. 256))*/
#endif

typedef char FileName[129];

#define FileName_REQUIRED_BYTES_FOR_ENCODING       113 
#define FileName_REQUIRED_BITS_FOR_ENCODING        903
#define FileName_REQUIRED_BYTES_FOR_ACN_ENCODING   113 
#define FileName_REQUIRED_BITS_FOR_ACN_ENCODING    903
#define FileName_REQUIRED_BYTES_FOR_XER_ENCODING   149

void FileName_Initialize(FileName pVal);
flag FileName_IsConstraintValid(const FileName val, int* pErrCode);
#ifndef ERR_FileName 
#define ERR_FileName		1003  /*(SIZE(1 .. 128))*/
#endif

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag Identifier_Encode(const Identifier val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag Identifier_Decode(Identifier pVal, BitStream* pBitStrm, int* pErrCode);
flag FilePath_Encode(const FilePath val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag FilePath_Decode(FilePath pVal, BitStream* pBitStrm, int* pErrCode);
flag FileName_Encode(const FileName val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag FileName_Decode(FileName pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
